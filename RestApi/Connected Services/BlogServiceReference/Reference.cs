//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlogServiceReference
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Blog", Namespace="http://schemas.datacontract.org/2004/07/SoapApi.Features")]
    public partial class Blog : object
    {
        
        private string ContentField;
        
        private System.DateTime CreatedDateField;
        
        private int IdField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content
        {
            get
            {
                return this.ContentField;
            }
            set
            {
                this.ContentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate
        {
            get
            {
                return this.CreatedDateField;
            }
            set
            {
                this.CreatedDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                this.TitleField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BlogServiceReference.IBlogService")]
    public interface IBlogService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/AddBlog", ReplyAction="http://tempuri.org/IBlogService/AddBlogResponse")]
        System.Threading.Tasks.Task AddBlogAsync(BlogServiceReference.Blog blog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetBlog", ReplyAction="http://tempuri.org/IBlogService/GetBlogResponse")]
        System.Threading.Tasks.Task<BlogServiceReference.Blog> GetBlogAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetAllBlogs", ReplyAction="http://tempuri.org/IBlogService/GetAllBlogsResponse")]
        System.Threading.Tasks.Task<BlogServiceReference.Blog[]> GetAllBlogsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/UpdateBlog", ReplyAction="http://tempuri.org/IBlogService/UpdateBlogResponse")]
        System.Threading.Tasks.Task UpdateBlogAsync(BlogServiceReference.Blog blog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/DeleteBlog", ReplyAction="http://tempuri.org/IBlogService/DeleteBlogResponse")]
        System.Threading.Tasks.Task DeleteBlogAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface IBlogServiceChannel : BlogServiceReference.IBlogService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class BlogServiceClient : System.ServiceModel.ClientBase<BlogServiceReference.IBlogService>, BlogServiceReference.IBlogService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public BlogServiceClient() : 
                base(BlogServiceClient.GetDefaultBinding(), BlogServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IBlogService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BlogServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(BlogServiceClient.GetBindingForEndpoint(endpointConfiguration), BlogServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BlogServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(BlogServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BlogServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(BlogServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BlogServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task AddBlogAsync(BlogServiceReference.Blog blog)
        {
            return base.Channel.AddBlogAsync(blog);
        }
        
        public System.Threading.Tasks.Task<BlogServiceReference.Blog> GetBlogAsync(int id)
        {
            return base.Channel.GetBlogAsync(id);
        }
        
        public System.Threading.Tasks.Task<BlogServiceReference.Blog[]> GetAllBlogsAsync()
        {
            return base.Channel.GetAllBlogsAsync();
        }
        
        public System.Threading.Tasks.Task UpdateBlogAsync(BlogServiceReference.Blog blog)
        {
            return base.Channel.UpdateBlogAsync(blog);
        }
        
        public System.Threading.Tasks.Task DeleteBlogAsync(int id)
        {
            return base.Channel.DeleteBlogAsync(id);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IBlogService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IBlogService))
            {
                return new System.ServiceModel.EndpointAddress("https://localhost:7055/Blog.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return BlogServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IBlogService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return BlogServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IBlogService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IBlogService,
        }
    }
}
